nextflow_process {

    name "Test Process AMPLIFY_PREDICT"
    script "../main.nf"
    process "AMPLIFY_PREDICT"

    tag "modules"
    tag "modules_nfcore"
    tag "amplify"
    tag "amplify/predict"
    tag "pyrodigal"
    tag "gunzip"

    setup {
            run("PYRODIGAL") {
                script "../../../pyrodigal/main.nf"
                process {
                    """
                    input[0] =  Channel.fromList([
                        tuple([ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['illumina']['contigs_fasta'], checkIfExists: true))
                    ])
                    """
                }
            }
            run("GUNZIP") {
                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] =  PYRODIGAL.out.faa

                    """
                }
            }
        }

   test("sarscov2 - contigs [fasta]") {

        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs [fasta] - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.tsv.collect { file(it[1]).getName() } +
                                process.out.versions).match() }
            )
        }

    }

}
