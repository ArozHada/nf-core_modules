nextflow_process {

    name "Test Process ATLASGENEANNOTATIONMANIPULATION_GTF2FEATUREANNOTATION"
    script "modules/nf-core/atlasgeneannotationmanipulation/gtf2featureannotation/main.nf"
    process "ATLASGENEANNOTATIONMANIPULATION_GTF2FEATUREANNOTATION"
    config "tests/modules/nf-core/atlasgeneannotationmanipulation/gtf2featureannotation/nextflow.config"
    tag "atlasgeneannotationmanipulation_gtf2featureannotation"

    test("Human Genome GTF") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ "id":"homo_sapiens"],
                            file(params.test_data['homo_sapiens']['genome']['genome_gtf'], checkIfExists: true) 
                           ]
                input[1] = [
                            [ "id":"homo_sapiens"],
                            []
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path(params.outdir).list()).match("human_genome_gtf") }
            )
        }
    }

    test("Human Genome GTF With Fasta") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ "id":"homo_sapiens"],
                            file(params.test_data['homo_sapiens']['genome']['genome_gtf'], checkIfExists: true) 
                           ]
                input[1] = [
                            [ "id":"homo_sapiens"],
                            file(params.test_data['homo_sapiens']['genome']['transcriptome_fasta'], checkIfExists: true)
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path(params.outdir).list()).match("human_genome_gtf_fasta") }
            )
        }
    }
}
