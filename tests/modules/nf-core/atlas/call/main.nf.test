nextflow_process {

    name "Test Process ATLAS_CALL"
    script "modules/nf-core/atlas/call/main.nf"
    process "ATLAS_CALL"
    config "tests/modules/nf-core/atlas/call/nextflow.config"
    tag "atlas_call"

    test("Sarscov2 Illumina PE Sorted BAM") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                                file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true),
                                file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true),
                                [],
                                []
                            ]
                input[1] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                input[2] = file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true)
                input[3] = []
                input[4] = 'randomBase'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path("$outputDir/atlas/versions.yml")).match() },
                { assert new File("$outputDir/atlas/test.paired_end.sorted_randomBase.vcf.gz").exists() },
            )
        }

    }

}
