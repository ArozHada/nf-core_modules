nextflow_process {

    name "Test Process ABACAS"
    script "modules/nf-core/abacas/main.nf"
    config "tests/modules/nf-core/abacas/nextflow.config"
    process "ABACAS"
    tag "abacas"

    test("test_abacas") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                             file(params.test_data['sarscov2']['illumina']['scaffolds_fasta'], checkIfExists: true)
                           ]

                input[1] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                """
            }
        }

        then {
            // Assert that the process ran successfully
            assert process.success

            assert snapshot(
                            path("$outputDir/abacas/test.abacas.crunch"),
                            path("$outputDir/abacas/test.abacas.fasta"),
                            path("$outputDir/abacas/test.abacas.gaps"),
                            path("$outputDir/abacas/test.abacas.gaps.tab"),
                            path("$outputDir/abacas/test.abacas.MULTIFASTA.fa"),
                            path("$outputDir/abacas/test.abacas.nucmer.tiling"),
                            path("$outputDir/abacas/test.abacas.tab"),
                            path("$outputDir/abacas/test.abacas.unused.contigs.out"),
                            path("$outputDir/abacas/versions.yml")
                           ).match("abacas")

            assert new File("$outputDir/abacas/test.abacas.bin").exists()
            assert new File("$outputDir/abacas/test.abacas.nucmer.delta").exists()
            assert new File("$outputDir/abacas/test.abacas.nucmer.filtered.delta").exists()
        }

    }

}
