nextflow_process {

    name "Test Process ADAPTERREMOVAL"
    script "modules/nf-core/adapterremoval/main.nf"
    config "tests/modules/nf-core/adapterremoval/nextflow.config"
    process "ADAPTERREMOVAL"
    tag "adapterremoval"

    test("Single_End") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:true, collapse:false ], // meta map
                            file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                            ]

                input[1] = []
                """
            }
        }

        then {
            // Assert that the process ran successfully
            assert process.success

            assert snapshot(path(params.outdir).list()).match("single_end")
        }

    }

    test("Paired_End") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:false, collapse:false ], // meta map
                           [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ]
                           ]

                input[1] = []
                """
            }
        }

        then {
            // Assert that the process ran successfully
            assert process.success

            assert snapshot(path(params.outdir).list()).match("paired_end")
        }

    }

    test("Paired_End_Collapse") {

        options "--collapse"

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                            [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                                file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ]
                            ]

                input[1] = []
                """
            }
        }

        then {
            // Assert that the process ran successfully
            assert process.success

            assert snapshot(path(params.outdir).list()).match("paired_end_collapse")
        }

    }

    test("Paired_End_AdapterList") {

        options "--collapse"

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test', single_end:false, collapse:false ], // meta map
                            [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                                file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ]
                            ]
                input[1] = file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/adapterremoval/adapterremoval_adapterlist.txt", checkIfExists: true)
                """
            }
        }

        then {
            // Assert that the process ran successfully
            assert process.success

            // Assert that the process produced the expected output
            assert snapshot(path(params.outdir).list()).match()
        }

    }

}
