nextflow_process {

    name "Test Process BCFTOOLS_CONCAT"
    script "modules/nf-core/bcftools/concat/main.nf"
    process "BCFTOOLS_CONCAT"
    config "tests/modules/nf-core/bcftools/concat/nextflow.config"
    tag "bcftools_concat"

    test("Sarscov2 Illumina VCF") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test3' ], // meta map
                             [ file(params.test_data['sarscov2']['illumina']['test_vcf_gz'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test2_vcf_gz'], checkIfExists: true) ],
                             [ file(params.test_data['sarscov2']['illumina']['test_vcf_gz_tbi'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test2_vcf_gz_tbi'], checkIfExists: true) ]
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path(params.outdir).list()).match("vcf") }
            )
        }
    }

    test("Sarscov2 Illumina VCF With No TBI") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [ id:'test3' ], // meta map
                             [ file(params.test_data['sarscov2']['illumina']['test_vcf_gz'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test2_vcf_gz'], checkIfExists: true) ],
                             []
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path(params.outdir).list()).match("vcf_no_tbi") }
            )
        }
    }
}
